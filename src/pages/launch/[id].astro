---
import Layout from "../../layouts/Layout.astro";
import { getLatestLaunches, getLaunchById } from "../../services/spacex";

// en astro.config.mjs podemos establecer el tipo de renderizado
// por defecto hace un pre-renderizado, x lo tanto, las url dinamicas como estas [id]
// deben ser definidas con export async function getStaticPaths()
// asi de antemano sabe todas las paginas que se tiene quecrear astro, y es cuando mas
// brilla xq genera lo justo y lo necesario

// podemos tambien elegir la opcion del server, para que genere todo desde el servidor
// y usar un adaptador para lo que se desee, en cuyo caso no se va a tener getStaticPaths
// o la opcion hybrid, que por defecto va a pedir getStaticPaths para pre-renderizar la pagina
// salvo que se coloque export const prerender = false; en cuyo caso hace SSR

// moraleja si sabes que de antemano lo que vas a renderizar
// xq es una lista de productos, una lista de entrada de un blog,
// cosas donde astro brilla, no toques nada, pone getStaticPaths y listo
// pero si puntualmente necesitas hacer un SSR xq es necesario bueno hacelo

export const prerender = false; // server
// una vez usas server en vez de pre-render
// podes manejar las cosas asi:

// cookies
// if (Astro.cookies.get('user')) {
//     console.log('user logged');
//     Astro.redirect('/unauthorized');
// } else {
//     console.log('user not logged');
// }

const { id } = Astro.params;

let launch;

if (id) {
  launch = await getLaunchById({ id });
}

// export async function getStaticPaths() {
//   // llamar a una api externa
//   // para saber todas las ids que debes generar
//   // cuando sabes el numero y va a ser finito determinado
//   // sino tenes que usar SSR
//   const launches = await getLatestLaunches();

//   return launches.map((launch) => ({
//     params: { id: launch.id },
//   }));
// }
---

<Layout title=`Lanzamiento ${id}`>
  <article class="flex flex-col gap-y-4">
    <img
      class="w-52 h-auto"
      src={launch?.links?.patch.small}
      alt={launch?.name}
    />
    <h2 class="text-4xl text-white font-bold">
      Launch #{launch?.flight_number}
    </h2>
    <p class="text-lg text-white">{launch?.details}</p>
  </article>
</Layout>
